{"version":3,"sources":["components/Header.js","StateManagement/reducer/tableDataReducer.js","StateManagement/reducer/authReducer.js","StateManagement/reducer/index.js","StateManagement/store.js","pages/HomePage.js","StateManagement/actions/tableActions.js","StateManagement/actions/authActions.js","pages/LoginPage.js","utils/index.js","components/Sidebar.js","components/selectableRow.js","components/Table.js","components/roles.js","components/Profile.js","components/Users.js","components/RegisterNewUser.js","components/Leaves.js","components/Userdetails.js","components/MyLeaves.js","components/RegisterNewLeave.js","components/DashboardContent.js","pages/DashBoard.js","App.js","serviceWorker.js","index.js"],"names":["Component","initialState","selectedColumns","currentTableData","error","user","isAuthenticated","combineReducers","auth","state","action","type","tableData","console","log","payload","fetching","trace","currentChartData","store","thunk","promise","createStore","rootReducer","composeWithDevTools","applyMiddleware","HomePage","this","props","to","connect","retriveData","query","table","extraparams","dispatch","axios","url","headers","method","then","res","fetched","data","catch","err","deleteLeave","leaveids","forEach","id","qs","stringify","leaveid","val","logout","LoginPage","variant","style","backgroundColor","height","width","className","paddingTop","color","onSubmit","e","preventDefault","username","password","login","target","value","class","name","placeholder","withRouter","array","item","Sidebar","getRole","bind","roleCode","links","history","push","Navbar","bg","Brand","fontSize","textAlign","textTransform","href","firstname","lastname","role","Nav","map","onClick","SelectableRow","onChange","onSelectionChange","rowid","checked","onSelected","onDeSelected","defaultChecked","children","Table","selected","onSelections","Card","borderRadius","overflow","fields","i","length","index","isSelected","row","includes","selection","setState","filter","utils","rowItem","linkdata","UIOptions","Profile","email","leavestaken","Users","selectedUsers","getState","1","selections","uids","uid","deleteUser","RegisterNewUser","Leaves","selectedItems","indexOf","3","String","slice","split","join","4","approveLeave","UserDetails","match","params","MyLeaves","RegisterNewLeave","leaveType","from_to","from_y","from_m","from_d","que","maxLength","form","DashboardContent","screen","marginLeft","padding","exact","path","render","DashBoard","roles","component","ownProps","tableError","App","Dashboard","Boolean","window","location","hostname","ReactDOM","st","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fccf5562.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\n \r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"primary\" variant=\"dark\" className=\"nav justify-content-around\">\r\n                <Navbar.Brand style={{fontSize : \"26px\"}} className=\"ml-50\" href=\"/\">TRADER TRAINER</Navbar.Brand>\r\n                <Nav className= \"justify-content-around\">\r\n                    {this.props.children}\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n","const initialState = {\r\n   selectedColumns : [],\r\n   currentTableData : [],\r\n   error : null\r\n}\r\n\r\nexport const tableDataReducer = (state = initialState, action) =>{\r\n    console.log(action.payload);\r\n    switch(action.type){\r\n    \r\n        // case \"addSelection\" : \r\n        //     return({\r\n        //         ...state,\r\n        //         selectedColumns : {\r\n        //             ...state.selectedColumns,\r\n        //             [action.payload.uid] : action.payload\r\n        //         }\r\n        //     })\r\n        // case \"removeSel\" : \r\n        //     return({\r\n        //         ...state,\r\n        //         selectedColumns : [...selectedColumns,action.payload]\r\n        //     })\r\n        case \"updateSelections\":\r\n            return ({\r\n                ...state,\r\n                selectedColumns : action.payload\r\n            })\r\n        case \"RetriveData_PENDING\":\r\n            return ({\r\n                ...state,\r\n                fetching : true,\r\n                currentTableData : state.currentTableData,\r\n            })\r\n        case \"query_complete\":\r\n            console.trace('HELLO')\r\n            return ({\r\n                ...state,\r\n                fetching : false,\r\n                currentTableData : action.payload,\r\n\r\n            })\r\n        case \"query_failed\":\r\n            return ({\r\n                ...state,\r\n                fetching : false,\r\n                currentChartData : state.currentChartData,\r\n                error : action.error\r\n            })\r\n        case \"CreateLeave_success\":\r\n            return ({\r\n                ...state,\r\n                fetching : false,\r\n                error : action.error\r\n            })\r\n        case \"CreateLeave_success\":\r\n            return ({\r\n                ...state,\r\n                fetching : false,\r\n                error : action.error\r\n            })\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { strict } from \"assert\";\r\n\r\nconst initialState = {\r\n    user : null,\r\n    isAuthenticated : false,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case \"Login_Fetching\":\r\n            return ({\r\n                ...state,\r\n                ...action\r\n            })\r\n        case \"Login_Fetched\":\r\n            return ({\r\n                ...state,\r\n                ...action\r\n            })\r\n        case \"Login_Failed\":\r\n            return ({\r\n                ...state,\r\n                ...action\r\n            })\r\n        case \"CreateUser_success\":\r\n            return({\r\n                ...state,\r\n                ...action\r\n            })\r\n        case \"CreateUser_failed\":\r\n                return({\r\n                    ...state,\r\n                    ...action\r\n                })\r\n        case 'logout':\r\n            return({\r\n                ...state,\r\n                ...action\r\n            })\r\n        default :\r\n           return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {tableDataReducer} from './tableDataReducer';\r\nimport {authReducer} from './authReducer';\r\n\r\nexport default combineReducers({\r\n        auth : authReducer,\r\n        tableData : tableDataReducer\r\n})","import {createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer';\r\nimport promise from 'redux-promise-middleware';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst initialState= {};\r\nconst middleware = [\r\n    thunk,\r\n    promise()\r\n]\r\n\r\nexport const store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(thunk))); \r\n\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport { Button, Nav } from 'react-bootstrap';\r\nimport { store } from '../StateManagement/store';\r\nimport { Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass HomePage extends Component {\r\n    componentWillMount(){\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.isAuthenticated);\r\n        if(this.props.isAuthenticated) {return (<Redirect to='/Dashboard'></Redirect>)}\r\n        else{return (<Redirect to='/Login'></Redirect>)}\r\n    }\r\n}\r\n\r\nexport default connect((state,props) => ({\r\n    isAuthenticated : state.auth.isAuthenticated,\r\n}))(HomePage)","import thunk from 'redux-thunk';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\n\r\nexport const retriveData = (query = {table : 'users',extraparams: {}}) => (dispatch) => {\r\n    axios({\r\n        url : '/api/data/getData/'+query.table,\r\n        headers : {\r\n            'content-type' : 'application/x-www-form-urlencoded'\r\n        },\r\n        method : 'get',\r\n        \r\n    }).then((res)=>{\r\n        console.log(res)\r\n          dispatch({\r\n              type : 'query_complete',\r\n              fetched : true,\r\n              payload : res.data,\r\n              error : null\r\n          })\r\n    }).catch(err=>{\r\n        dispatch({\r\n            type : 'query_failed',\r\n            fetched : true,\r\n            error : err\r\n        })\r\n    });\r\n};\r\n\r\nexport const approveLeave = (leaveids=[])=> (dispatch) => {\r\n    leaveids.forEach(id => {\r\n        axios({\r\n             headers : {\r\n                 'content-type' : 'application/x-www-form-urlencoded'\r\n             },\r\n             url : '/api/data/leaves/approve',\r\n             method : \"post\",\r\n             data : qs.stringify({\r\n                 leaveid : id\r\n             })\r\n        }).then((val)=>{\r\n            dispatch({\r\n                type : 'approveLeave_success',\r\n                error : null\r\n            })\r\n            dispatch(retriveData({table : 'leaves'}));\r\n            console.log(val);\r\n        }).catch(err=>{\r\n            dispatch({\r\n                type : 'approveLeave_failed',\r\n                error : err\r\n            })\r\n        })\r\n    });\r\n}\r\n\r\n\r\nexport const registerLeave = (query) => (dispatch) =>{\r\n    console.log('New Leave aaaa')\r\n    console.log({query})\r\n    axios({\r\n        headers : {\r\n            'content-type' : 'application/x-www-form-urlencoded'\r\n        },\r\n        url : '/api/data/leaves/addleave',\r\n        method : 'post',\r\n        data : qs.stringify({\r\n            from_to : query.from_to,\r\n            leaveType : query.leaveType,\r\n            que :  \"INSERT INTO leaves (uid,from_to,leave_type) VALUES (\"+query.uid+\",'\"+query.from_to+\"','\"+query.leaveType+\"')\"\r\n        })\r\n    }).then((res)=>{\r\n          dispatch({\r\n              type : 'CreateLeave_success',\r\n              fetched : true,\r\n              error : null\r\n          })\r\n    }).catch(err=>{\r\n        dispatch({\r\n            type : 'CreateLeave_failed',\r\n            error : err\r\n        })\r\n    });\r\n} \r\nexport const deleteLeave = (leaveids=[])=> (dispatch) => {\r\n    leaveids.forEach(id => {\r\n        axios({\r\n             headers : {\r\n                 'content-type' : 'application/x-www-form-urlencoded'\r\n             },\r\n             url : '/api/data/leaves/delete',\r\n             method : 'delete',\r\n             data : qs.stringify({\r\n                 leaveid : id\r\n             })\r\n        }).then((val)=>{\r\n            dispatch({\r\n                type : 'deleteLeave_success',\r\n                error : null\r\n            })\r\n            dispatch(retriveData({table : 'leaves'}));\r\n            console.log(val);\r\n        }).catch(err=>{\r\n            dispatch({\r\n                type : 'deleteLeave_failed',\r\n                error : err\r\n            })\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateSelections = (data) => (dispatch) =>{\r\n    dispatch({\r\n        type : \"updateSelections\",\r\n        payload : data\r\n    })\r\n}","import thunk from \"redux-thunk\";\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\nimport {retriveData} from './tableActions';\r\nconst url = 'http://127.0.0.1:3000'\r\n\r\nexport const login = (query = {}) => (dispatch) => {\r\n    axios({\r\n        headers : {\r\n            'content-type' : 'application/x-www-form-urlencoded'\r\n        },\r\n        url : '/api/auth/users/login',\r\n        method : 'post',\r\n        data : qs.stringify({\r\n            username : query.username,\r\n            password : query.password\r\n        })\r\n    }).then((res)=>{\r\n          dispatch({\r\n              type : 'Login_Fetched',\r\n              fetched : true,\r\n              user : res.data,\r\n              isAuthenticated : true,\r\n              error : null\r\n          })\r\n    }).catch(err=>{\r\n        dispatch({\r\n            type : 'Login_Failed',\r\n            fetched : true,\r\n            isAuthenticated : false,\r\n            error : err\r\n        })\r\n    });\r\n}\r\n\r\n\r\nexport const logout = (dispatch) => {\r\n    axios({\r\n        url : '/api/auth/users/logout',\r\n        method : 'post',\r\n    }).then((res)=>{\r\n        dispatch({\r\n            type : 'logout',\r\n            isAuthenticated : false,\r\n            fetched : true,\r\n            error : null\r\n        })\r\n    }).catch(err=>{\r\n        dispatch({\r\n            type : 'logout',\r\n            fetched : true,\r\n            isAuthenticated : false,\r\n            error : err\r\n        })\r\n    });\r\n   \r\n}\r\n\r\nexport const deleteUser = (uids=[])=> (dispatch) => {\r\n   uids.forEach(id => {\r\n       axios({\r\n            headers : {\r\n                'content-type' : 'application/x-www-form-urlencoded'\r\n            },\r\n            url : '/api/auth/users/delete',\r\n            method : 'delete',\r\n            data : qs.stringify({\r\n                uid : id\r\n            })\r\n       }).then((val)=>{\r\n           dispatch(retriveData({table : 'users'}));\r\n           console.log(val);\r\n       })\r\n   });\r\n}\r\n\r\nexport const registerUser = (query) => (dispatch) =>{\r\n    console.log('New User')\r\n    console.log({query})\r\n    axios({\r\n        headers : {\r\n            'content-type' : 'application/x-www-form-urlencoded'\r\n        },\r\n        url : '/api/auth/users/create',\r\n        method : 'post',\r\n        data : qs.stringify({\r\n            username : query.username,\r\n            password : query.password,\r\n            email : query.email,\r\n            role : query.role,\r\n            firstname : query.firstname,\r\n            lastname : query.lastname\r\n        })\r\n    }).then((res)=>{\r\n          dispatch({\r\n              type : 'CreateUser_success',\r\n              fetched : true,\r\n              error : null\r\n          })\r\n    }).catch(err=>{\r\n        dispatch({\r\n            type : 'CreateUser_failed',\r\n            error : err\r\n        })\r\n    });\r\n} ","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport './LoginPage.css';\r\nimport { Jumbotron, Form, Button} from 'react-bootstrap';\r\nimport { login } from '../StateManagement/actions/authActions';\r\nimport { store } from '../StateManagement/store';\r\nimport { Redirect, withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div variant='dark' style={{backgroundColor : '#000', height : '100vh', width: '100vw'}}>\r\n                {this.props.isAuthenticated ? <Redirect to='/'></Redirect> : <div/>}\r\n                <div className=\"container\" style={{paddingTop: \"60px\"}}>\r\n                <h1 style={{color : '#fff'}}>Human Resource <br/> Mangement System</h1>\r\n                <h2 className=\"pt-5\" style={{ color : '#fff'}}>Login</h2>\r\n                <form className=\"pt-3 w-auto\" onSubmit={\r\n                (e)=>{\r\n                    e.preventDefault();\r\n                    store.dispatch(login({\r\n                        username : e.target.username.value,\r\n                        password : e.target.password.value\r\n                    }));\r\n                }}>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Username\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"password\" name=\"password\" type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\"/>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect((state,props) => \r\n({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n}))(LoginPage));","export default {\r\n    deleteIndImAr : (array = [], index = 0) => [...array.slice(0, index), ...array.slice(index + 1)],\r\n    appendImAr : (array = [], item) => [...array,item],  \r\n    cml2str : (str = '') => str.match('/[A-Z][a-z]+|[0-9]+/g').join(' ')\r\n}","import React, { Component } from 'react';\r\nimport './Sidebar.css';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {Link, Redirect, withRouter} from 'react-router-dom';\r\nimport { store } from '../StateManagement/store';\r\nimport { logout } from '../StateManagement/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport utils from '../utils';\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.getRole = this.getRole.bind(this);\r\n    }\r\n\r\n    getRole(roleCode){\r\n        switch(roleCode){\r\n            case 'emp' : return 'Employee';\r\n            case 'hr' : return 'HR';\r\n            case 'adm' : return 'Admin';\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.props.links);\r\n        if(this.props.isAuthenticated === false) this.props.history.push('/');\r\n        console.log(1);\r\n        return (\r\n            <Navbar style = {{height : '100vh'}} className=\"d-block p-4 w-25 position-fixed\" bg=\"primary\" variant=\"dark\" id=\"sidebar\" >\r\n            <div className=\"container d-flex flex-end flex-column align-items-end\">\r\n                <Navbar.Brand style={{fontSize : '28px', textAlign : 'right', textTransform: 'capitalize'}} className=\"m-0\" href=\"/\">{`${this.props.user.firstname} ${this.props.user.lastname}`}</Navbar.Brand>\r\n                <Navbar.Brand style={{textAlign:'right', textTransform: 'initial'}} className=\"mt-0 mr-0\" href=\"#\">{this.getRole(this.props.user.role)}</Navbar.Brand>\r\n            </div>\r\n                <Nav className='nav mt-5'>\r\n                    <div className=\"p-0 mt-4 d-block w-100\">\r\n                        <Link className='nav-link pt-3' to=\"/Dashboard\">Profile</Link>\r\n                        {this.props.links.map((val)=>{\r\n                            //let tag = val.match('/[A-Z][a-z]+|[0-9]+/g').join(' ');\r\n                            //console.log(tag);\r\n                            console.trace(typeof(val));\r\n                            return (<Link className='nav-link pt-3 text-capitalize'to={`/Dashboard/${val}`}\r\n                            >{val}</Link>)\r\n                        })}\r\n                        <Link className='nav-link pt-3' onClick={(e)=>{\r\n                            e.preventDefault();\r\n                            store.dispatch(logout)\r\n                        }}>Logout</Link>\r\n                    </div>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect((state,props)=>({\r\n    user : state.auth.user ? state.auth.user : {firstname : 'worng', lastname : 'chi', role : 'emp'} ,\r\n    isAuthenticated : state.auth.isAuthenticated\r\n}))(Sidebar))","import React, { Component } from 'react';\r\n\r\nclass SelectableRow extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// this.state = {\r\n\t\t// \tisSelected: this.props.isSelected\r\n\t\t// };\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td className=\"justify-content-center text-center align-middle\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tthis.props.onSelectionChange(this.props.rowid, e.target.checked);\r\n\t\t\t\t\t\t\tif (this.props.onSelected) this.props.onSelected(this.props.rowid);\r\n\t\t\t\t\t\t\tif (this.props.onDeSelected) this.props.onDeSelected(this.props.rowid);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tid=\"select\"\r\n\t\t\t\t\t\tname=\"select\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tdefaultChecked={false}\r\n                        //checked = {this.props.isSelected}\r\n\t\t\t\t\t\tvalue={false}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</td>\r\n\t\t\t\t    {this.props.children}\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SelectableRow;\r\n","import React, { Component } from 'react';\r\nimport { store } from '../StateManagement/store';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\nimport SelectableRow from './selectableRow';\r\nimport { retriveData, updateSelections } from '../StateManagement/actions/tableActions';\r\nimport utils from '../utils';\r\n\r\nclass Table extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = []\r\n\t\t\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.state = {\r\n\t\t\tselected: [],\r\n\t\t\ttableData: this.props.tableData\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.props.onSelections) {\r\n\t\t\tthis.props.onSelections(this.state.selected);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Card className=\"shadow-sm\" style={{ borderRadius: '10px', height: '60vh', overflow: 'auto' }}>\r\n\t\t\t\t<table className=\"table table-striped\">\r\n\t\t\t\t\t<thead className=\"text-white bg-primary\">\r\n\t\t\t\t\t\t<th className=\"text-capitalize align-middle text-center\">Selected</th>\r\n\t\r\n\t\t\t\t\t\t{this.props.fields.map((val, i) => (\r\n\t\t\t\t\t\t\t<th className=\"text-capitalize align-middle text-center\">{val}</th>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{ this.props.data.length > 0 ? this.props.data.map((val, index) => (\r\n\t\t\t\t\t\t\t<SelectableRow\r\n\t\t\t\t\t\t\t\trowid={index}\r\n\t\t\t\t\t\t\t\tisSelected={this.state.selected.map((row)=>row[0]).includes(val[0])}\r\n\t\t\t\t\t\t\t\tonSelectionChange={(rowid, selection) => {\r\n\t\t\t\t\t\t\t\t\tif (this.state.selected.includes(val)) {\r\n\t\t\t\t\t\t\t\t\t\tif (!selection) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected: this.state.selected.filter((item) => item !== val)\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tif (this.props.onSelections) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.onSelections(this.state.selected);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (selection) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected: utils.appendImAr(this.state.selected, val)\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (this.props.onSelections) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.onSelections(this.state.selected);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t{val.map((rowItem, i) => this.props.linkdata && this.props.linkdata[i] ? <td className=\"align-middle text-center\">{this.props.linkdata[i](val)}</td> : <td className=\"align-middle text-center\">{rowItem}</td>)}\r\n\t\t\t\t\t\t\t</SelectableRow>\r\n\t\t\t\t\t\t)) : \r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td>NO DATA</td>\r\n\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect((state, props) => ({\r\n\tfields: state.tableData.currentTableData.fields || [ 'loading' ],\r\n\tdata: state.tableData.currentTableData.data || [ [ 'loading' ] ]\r\n}))(Table);\r\n","export default {\r\n        'emp' : {\r\n            UIOptions : [\r\n            \r\n                'leavesregister',\r\n            ]\r\n        },\r\n        'hr' : {\r\n            UIOptions : [\r\n            \r\n                'manageUsers',\r\n                'manageLeaves',\r\n                'leavesRegister',\r\n\r\n            ]\r\n        },\r\n        'adm' : {\r\n            UIOptions : [\r\n\r\n                'manageUsers',\r\n                'manageLeaves',\r\n                'leavesRegister',\r\n            ]\r\n        },\r\n        'root' : {\r\n            UIOptions : [\r\n           \r\n                'manageUsers',\r\n                'manageLeaves',\r\n                'leavesRegister',\r\n\r\n         ]\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Profile.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Profile extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    getRole(roleCode){\r\n        switch(roleCode){\r\n            case 'emp' : return 'Employee';\r\n            case 'hr' : return 'HR';\r\n            case 'adm' : return 'Admin';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container main overflow-auto h-75 m-3'>\r\n                <h3 className='text-secondary'>Full Name</h3>\r\n                <h4 className='text-primary text-capitalize'>{`${this.props.user.firstname} ${this.props.user.lastname}`}</h4>\r\n\r\n                <h3 className='text-secondary'>Role</h3>\r\n                <h4 className='text-primary'>{`${this.getRole(this.props.user.role)}`}</h4>\r\n\r\n                <h3 className='text-secondary'>Username</h3>\r\n                <h4 className='text-primary'>{`${this.props.user.username}`}</h4>\r\n\r\n                <h3 className='text-secondary'>Email Address</h3>\r\n                <h4 className='text-primary'>{`${this.props.user.email}`}</h4>\r\n\r\n                <h3 className='text-secondary'>Leaves Taken</h3>\r\n                <h4 className='text-primary'>{`${this.props.user.leavestaken}`}</h4>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state,props)=>({\r\n    user : state.auth.user ? state.auth.user : {firstname : 'worng', lastname : 'chi', role : 'emp', leavestaken : 0},\r\n}))(Profile)","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { store } from '../StateManagement/store';\r\nimport Table from '../components/Table';\r\nimport { retriveData } from '../StateManagement/actions/tableActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteUser } from '../StateManagement/actions/authActions';\r\n\r\nexport class Users extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.selectedUsers = [];\r\n\t}\r\n\r\n\tcomponentWillMount(){\r\n\t\tif (store.getState().auth.isAuthenticated) store.dispatch(retriveData({ table: 'users' }));\r\n\t}\r\n\tstatic propTypes = {\r\n\t\tprop: PropTypes\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tlinkdata = {{\r\n\t\t\t\t\t\t1 : (val) => (<Link to={'/Dashboard/manageUsers/'+val[0]}>{val[1]}</Link>)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttable=\"users\"\r\n\t\t\t\t\tonSelections={(selections) => {\r\n\t\t\t\t\t\tthis.selectedUsers = selections;\r\n\t\t\t\t\t\tconsole.log(this.selectedUsers);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Link to=\"/Dashboard/manageUsers/register/name\">\r\n\t\t\t\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-success float-right mt-4 ml-2\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRegister New User\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-danger float-right mt-4 ml-2\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\tstore.dispatch(deleteUser(this.selectedUsers.map((val) => val[0])));\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect((state, props) => {})(Users);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { store } from '../StateManagement/store';\r\nimport { registerUser } from '../StateManagement/actions/authActions';\r\n\r\nclass RegisterNewUser extends Component {\r\nconstructor(props){\r\n        super(props)\r\n    }\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                store.dispatch(registerUser({\r\n                    username  : e.target.username.value,\r\n                    password  : e.target.password.value,\r\n                    firstname : e.target.firstname.value,\r\n                    lastname  : e.target.lastname.value,\r\n                    role      : e.target.role.value,\r\n                    email     : e.target.email.value,\r\n                }))\r\n            }}>\r\n                <label>*Username Must Be Unique<br></br>\r\n                *Password Must Be Greater than 6 characters<br></br>\r\n                *Role Can be adm for Admin, emp For Employee, hr For HR</label>\r\n                {this.props.error != null ? <label className=\"alert-danger\"></label> : <div className=\"div\"></div> }\r\n                <div class=\"form-group\">\r\n                        <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Username\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type='email' name=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type='text' name=\"role\" class=\"form-control\" id=\"role\" placeholder=\"Role\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" name=\"firstname\" type=\"text\" class=\"form-control\" id=\"firstname\" placeholder=\"First Name\"/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" name=\"lastname\" type=\"text\" class=\"form-control\" id=\"lastname\" placeholder=\"Last Name\"/>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>      \r\n                    <button onClick={()=>{this.props.history.push('/Dashboard/manageUsers')}} class=\"btn btn-danger ml-2\">Back</button>           \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect((state,props)=>({\r\n    error : state.auth.error\r\n}))(RegisterNewUser));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {store} from '../StateManagement/store';\r\nimport Table from '../components/Table';\r\nimport { retriveData, deleteLeave, approveLeave} from '../StateManagement/actions/tableActions';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\n\r\nexport class Leaves extends Component {\r\n    constructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.selectedItems = [];\r\n    }\r\n\r\n\tcomponentWillMount(){\r\n\t\tif (store.getState().auth.isAuthenticated && (!!~['hr', 'adm'].indexOf(store.getState().auth.user.role))) store.dispatch(retriveData({ table: 'leaves'}));\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tprop: PropTypes\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\ttable=\"leaves\"\r\n\t\t\t\t\tonSelections={(selections) => {\r\n\t\t\t\t\t\tthis.selectedItems = selections;\r\n\t\t\t\t\t\tconsole.log(this.selectedItems);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tlinkdata = {{\r\n\t\t\t\t\t\t3 : (val) => (String(val[3]).slice(1,-1).split(',').join(' to ')),\r\n\t\t\t\t\t\t4 : (val) => (val[4] == true ? 'Yes' : 'No'),\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Table>\r\n                <button\r\n                        className=\"btn btn-success float-right mt-4 ml-2\"\r\n                        onClick={(e) => {\r\n                            store.dispatch(approveLeave(this.selectedItems.map(val=>val[1])));\r\n                        }}\r\n                    >\r\n                        Approve Leave\r\n                </button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-danger float-right mt-4 ml-2\"\r\n\t\t\t\t\tonClick={(e)=>{store.dispatch(deleteLeave(this.selectedItems.map((val)=>val[1])));}}\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect((state,props)=>{\r\n})(Leaves);","import React, { Component } from 'react';\r\nimport './Profile.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useParams, withRouter } from 'react-router';\r\n\r\nclass UserDetails extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        let temp;\r\n        axios({\r\n            url : '/api/data/users/'+this.props.match.uid,\r\n            method : 'get',\r\n        }).then((res) =>{\r\n            console.log(res.data)\r\n            temp = res.data;\r\n        }\r\n        ).catch((err)=>console.log(err))\r\n        \r\n    }\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    componentWillMount(){\r\n        let uid = this.props.match.params.uid;\r\n        console.log(uid);\r\n        axios({\r\n            url : '/api/data/users/'+uid,\r\n            method : 'get',\r\n        }).then((res) =>{\r\n            console.log(res.data)\r\n            this.data = res.data;\r\n        }\r\n        ).catch((err)=>console.log(err))\r\n    }\r\n\r\n    getRole(roleCode){\r\n        switch(roleCode){\r\n            case 'emp' : return 'Employee';\r\n            case 'hr' : return 'HR';\r\n            case 'adm' : return 'Admin';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container main overflow-auto h-75 m-3'>\r\n                <h3 className='text-secondary'>Full Name</h3>\r\n                <h4 className='text-primary text-capitalize'>{`${this.data.firstname} ${this.data.lastname}`}</h4> \r\n\r\n                <h3 className='text-secondary'>Role</h3>\r\n                <h4 className='text-primary'>{`${this.getRole(this.data.role)}`}</h4>\r\n\r\n                <h3 className='text-secondary'>Username</h3>\r\n                <h4 className='text-primary'>{`${this.data.username}`}</h4>\r\n\r\n                <h3 className='text-secondary'>Email Address</h3>\r\n                <h4 className='text-primary'>{`${this.data.email}`}</h4>\r\n\r\n                <h3 className='text-secondary'>Leaves Taken</h3>\r\n                <h4 className='text-primary'>{`${this.data.leavestaken}`}</h4>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(UserDetails);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {store} from '../StateManagement/store';\r\nimport Table from '../components/Table';\r\nimport { retriveData, deleteLeave} from '../StateManagement/actions/tableActions';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport qs from 'querystring';\r\n\r\nexport class MyLeaves extends Component {\r\n    constructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.selectedItems = [];\r\n    }\r\n\r\n\tcomponentWillMount(){\r\n\t\tif (store.getState().auth.isAuthenticated && (!!~['hr', 'adm'].indexOf(store.getState().auth.user.role))) store.dispatch(retriveData({ table: 'leaves' , uid : store.getState().auth.user.uid}));\r\n\t}\r\n\r\n\tstatic propTypes = {\r\n\t\tprop: PropTypes\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Table\r\n\t\t\t\t\ttable=\"leaves\"\r\n\t\t\t\t\tonSelections={(selections) => {\r\n\t\t\t\t\t\tthis.selectedItems = selections;\r\n\t\t\t\t\t\tconsole.log(this.selectedItems);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tlinkdata = {{\r\n\t\t\t\t\t\t3 : (val) => (String(val[3]).slice(1,-1).split(',').join(' to ')),\r\n\t\t\t\t\t\t4 : (val) => (val[4] == true ? 'Yes' : 'No'),\r\n\t\t\t\t\t}}\r\n\t\t\t\t></Table>\r\n                <Link to='/Dashboard/leavesRegister/newLeave'>\r\n                    <button\r\n                        className=\"btn btn-success float-right mt-4 ml-2\"\r\n                        onClick={(e) => {\r\n                            store.dispatch(retriveData({ table: 'leaves' }));\r\n                        }}\r\n                    >\r\n                        Request New Leave\r\n                    </button>\r\n                </Link>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-danger float-right mt-4 ml-2\"\r\n\t\t\t\t\tonClick={(e)=>{store.dispatch(deleteLeave(this.selectedItems.map((val)=>val[1])))}}\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect((state,props)=>{\r\n})(MyLeaves);","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { store } from '../StateManagement/store';\r\nimport { registerLeave } from '../StateManagement/actions/tableActions';\r\n\r\nclass RegisterNewLeave extends Component {\r\nconstructor(props){\r\n        super(props)\r\n    }\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form id='leaveform' onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                store.dispatch(registerLeave({\r\n                    leaveType : e.target.leaveType.value,\r\n                    from_to : \"[\"+e.target.from_y.value+\r\n                                \"-\"+e.target.from_m.value+\"-\"+e.target.from_d.value+\r\n                                \",\"+e.target.from_y.value+\"-\"+e.target.from_m.value+\r\n                                \"-\"+e.target.from_d.value+\")\",\r\n                    uid : store.getState().auth.user.uid\r\n                }))\r\n            }}>\r\n                {this.props.error != null ? <label className=\"alert-danger\"></label> : <div className=\"div\"></div> }\r\n                   \r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">From</span>\r\n                        </div>\r\n                        <input name=\"from_d\" type=\"text\" maxLength=\"2\" className=\"form-control\" placeholder=\"DD\"/>\r\n                        <input name=\"from_m\" type=\"text\" maxLength=\"2\" className=\"form-control\" placeholder=\"MM\"/>\r\n                        <input name=\"from_y\" type=\"text\" maxLength=\"4\" className=\"form-control\" placeholder=\"YYYY\"/>\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">To</span>\r\n                        </div>\r\n                        <input name=\"to_d\" type=\"number\" maxLength=\"2\" className=\"form-control\" placeholder=\"DD\"/>\r\n                        <input name=\"to_m\" type=\"number\" maxLength=\"2\" className=\"form-control\" placeholder=\"MM\"/>\r\n                        <input name=\"to_y\" type=\"number\" maxLength=\"4\" className=\"form-control\" placeholder=\"YYYY\"/>\r\n                    </div>\r\n                    \r\n                    <div class=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">LeaveType</span>\r\n                        </div>\r\n                        <select name=\"leaveType\" form='leaveform' class=\"form-control\">\r\n                            <option value=\"casual\">casual</option>\r\n                            <option value=\"previlage\">previlage</option>\r\n                            <option value=\"sick\">sick</option>\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea name=\"reason\" class=\"form-control\" id=\"reason\" placeholder=\"Reason\"/>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>      \r\n                    <button onClick={()=>{this.props.history.push('/Dashboard/leavesRegister')}} class=\"btn btn-danger ml-2\">Back</button>           \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect((state,props)=>({\r\n    error : state.auth.error\r\n}))(RegisterNewLeave));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, useParams, withRouter } from 'react-router';\r\nimport roles from './roles'\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { Users } from './Users';\r\nimport RegisterNewUser from './RegisterNewUser';\r\nimport { Leaves } from './Leaves';\r\nimport UserDetails from './Userdetails';\r\nimport { MyLeaves } from './MyLeaves';\r\nimport RegisterNewLeave from './RegisterNewLeave';\r\n\r\nclass DashboardContent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        let screen = this.props.match.params.screen || 'Profile' ;\r\n        return (\r\n            <div style = {{marginLeft : '25%', width: \"100%\", padding : '0 50px 0 0'}}>\r\n                <div id=\"topDisplay\" className=\"container mt-4 ml-4\">\r\n                    <h1 className='text-primary text-capitalize'>{screen}</h1>\r\n                </div>\r\n                <div className=\"container mt-5 ml-4\">\r\n                    <Switch>\r\n                        <Route exact path = '/Dashboard' render={()=><Profile/>}></Route>\r\n                        <Route exact path = '/Dashboard/manageUsers' render = {()=><Users/>}></Route>\r\n                        <Route exact path = '/Dashboard/manageUsers/:uid' render = {()=><UserDetails/>}></Route>\r\n                        <Route exact path = '/Dashboard/manageUsers/register/name' render={()=><RegisterNewUser/>}></Route>\r\n                        <Route exact path = '/Dashboard/manageLeaves' render={()=><Leaves/>}></Route>\r\n                        <Route exact path = '/Dashboard/leavesRegister' render={()=><MyLeaves/>}></Route>\r\n                        <Route exact path = '/Dashboard/leavesRegister/newLeave' render={()=><RegisterNewLeave/>}></Route>\r\n                        <Route path = '/Dashboard/tasks'></Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nDashboardContent.propTypes = {\r\n\r\n};\r\n\r\nexport default withRouter(connect((state,props)=>{\r\n\r\n})(DashboardContent));\r\n","import React, { Component } from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport './DashBoard.css';\r\nimport {connect} from 'react-redux';\r\nimport {store} from '../StateManagement/store';\r\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\r\nimport {retriveData} from '../StateManagement/actions/tableActions';\r\nimport Table from '../components/Table';\r\nimport { Redirect, withRouter, Route, Router, Switch} from 'react-router';\r\nimport roles from '../components/roles';\r\nimport DashboardContent from '../components/DashboardContent';\r\n\r\nexport class DashBoard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount(){\r\n        \r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.match)\r\n        console.log(this.props.isAuthenticated);\r\n        console.log(this.props.user)\r\n        return (\r\n            <div id=\"dashboard\" className=\"d-flex\">\r\n                    <Sidebar links={roles[this.props.user.role] ? roles[this.props.user.role].UIOptions : ['Users']}/>   \r\n                    <Switch>\r\n                        <Route exact path='/Dashboard/:screen' component={DashboardContent}></Route>\r\n                        <Route path='/Dashboard/' component={DashboardContent}></Route>\r\n                    </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter( connect((state,ownProps) => \r\n({\r\n    user : state.auth.user ? state.auth.user : 'Sahil Pohare',\r\n    tableError : state.tableData.error\r\n}))(DashBoard));","import React, {Component} from 'react';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport Dashboard from './pages/DashBoard';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router,Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport PropTypes from 'prop-types'\n\nexport default function App({store}) {\n  return (\n      <Provider store={store}>\n        <Router className=\"App\">\n          <Switch>\n              <Route exact path='/' component = {HomePage}></Route>\n              <Route path='/Login' component = {LoginPage}></Route>\n              <Route path='/Dashboard' component = {Dashboard}></Route>\n          </Switch>\n        </Router>\n      </Provider>\n  )\n}\n\nApp.propTypes = {\n  store : PropTypes.object.isRequired\n}\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store as st} from './StateManagement/store';\n\nReactDOM.render(<App store={st} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}